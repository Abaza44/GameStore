@model GameStore.PL.Models.ErrorViewModel
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment Env
@{
    ViewData["Title"] = "Error";
}

<div class="container my-5">
    <div class="text-center">
        <h1 class="display-6 text-danger">Something went wrong</h1>
        <p class="lead">An error occurred while processing your request.</p>

        @if (TempData["ErrorTitle"] != null || TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mt-3">
                <strong>@(TempData["ErrorTitle"] ?? "Error")</strong>
                <div>@TempData["ErrorMessage"]</div>
            </div>
        }

        @if (Model.ShowRequestId)
        {
            <p class="text-muted mt-2">
                <strong>Request ID:</strong> <code>@Model.RequestId</code>
            </p>
        }

        <a asp-controller="Home" asp-action="Index" class="btn btn-primary mt-3">
            Back to Home
        </a>
    </div>

    @if (Env.IsDevelopment() && (!string.IsNullOrEmpty(Model.ExceptionMessage) || !string.IsNullOrEmpty(Model.StackTrace)))
    {
        <hr class="my-4" />
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">Development Details</div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.Path))
                {
                    <p><strong>Path:</strong> @Model.Path</p>
                }
                @if (!string.IsNullOrEmpty(Model.ExceptionMessage))
                {
                    <p><strong>Message:</strong> @Model.ExceptionMessage</p>
                }
                @if (!string.IsNullOrEmpty(Model.StackTrace))
                {
                    <pre class="small" style="white-space:pre-wrap;">@Model.StackTrace</pre>
                }
            </div>
        </div>
        <div class="alert alert-warning mt-3">
            Detailed errors are visible because ASPNETCORE_ENVIRONMENT=Development. Do not enable in production.
        </div>
    }
</div>